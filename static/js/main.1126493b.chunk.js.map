{"version":3,"sources":["Year.js","index.js"],"names":["createCalendar","currentDate","first","moment","clone","startOf","last","endOf","weeksCount","Math","ceil","day","date","calendar","Object","assign","weekNumber","week","push","year","month","set","CalendarDate","props","dateToRender","dateOfMonth","today","format","react_default","a","createElement","disabled","className","concat","onClick","Calendar","_React$Component","inherits","_super","_createSuper","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","call","apply","state","undefined","createClass","key","value","setState","prevProps","_this2","toUpperCase","map","index","alert","React","Component","Year","_React$Component2","_super2","_this$props","months","objectWithoutProperties","range","firstMonth","dates","i","Year_Calendar","add","navigate","action","PREVIOUS","NEXT","title","_ref","localizer","BigCalendar","momentLocalizer","formats","yearHeaderFormat","App","src_createSuper","lib_default","events","toolbar","views","messages","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.1126493b.chunk.js","sourcesContent":["// import PropTypes from 'prop-types'\nimport React from 'react'\nimport moment from 'moment'\n\nimport dates from 'react-big-calendar/lib/utils/dates'\nimport { navigate } from 'react-big-calendar/lib/utils/constants'\n\nfunction createCalendar(currentDate) {\n  if (!currentDate) {\n    currentDate = moment()\n  } else {\n    currentDate = moment(currentDate)\n  }\n\n  const first = currentDate.clone().startOf('month')\n  const last = currentDate.clone().endOf('month')\n  const weeksCount = Math.ceil((first.day() + last.date()) / 7)\n  const calendar = Object.assign([], { currentDate, first, last })\n\n  for (let weekNumber = 0; weekNumber < weeksCount; weekNumber++) {\n    const week = []\n    calendar.push(week)\n    calendar.year = currentDate.year()\n    calendar.month = currentDate.month()\n\n    for (let day = 7 * weekNumber; day < 7 * (weekNumber + 1); day++) {\n      const date = currentDate.clone().set('date', day + 1 - first.day())\n      date.calendar = calendar\n      week.push(date)\n    }\n  }\n\n  return calendar\n}\n\nfunction CalendarDate(props) {\n  const { dateToRender, dateOfMonth } = props\n  const today =\n    dateToRender.format('YYYY-MM-DD') === moment().format('YYYY-MM-DD')\n      ? 'today'\n      : ''\n\n  if (dateToRender.month() < dateOfMonth.month()) {\n    return (\n      <button disabled={true} className=\"date prev-month\">\n        {dateToRender.date()}\n      </button>\n    )\n  }\n\n  if (dateToRender.month() > dateOfMonth.month()) {\n    return (\n      <button disabled={true} className=\"date next-month\">\n        {dateToRender.date()}\n      </button>\n    )\n  }\n\n  return (\n    <button\n      className={`date in-month ${today}`}\n      onClick={() => props.onClick(dateToRender)}>\n      {dateToRender.date()}\n    </button>\n  )\n}\n\nclass Calendar extends React.Component {\n  state = {\n    calendar: undefined\n  }\n\n  componentDidMount() {\n    this.setState({ calendar: createCalendar(this.props.date) })\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.date !== prevProps.date) {\n      this.setState({ calendar: createCalendar(this.props.date) })\n    }\n  }\n\n  render() {\n    if (!this.state.calendar) {\n      return null\n    }\n\n    return (\n      <div className=\"month\">\n        <div className=\"month-name\">\n          {this.state.calendar.currentDate.format('MMMM').toUpperCase()}\n        </div>\n        {['S', 'M', 'T', 'W', 'T', 'F', 'S'].map((day, index) => (\n          <span key={index} className=\"day\">\n            {day}\n          </span>\n        ))}\n        {this.state.calendar.map((week, index) => (\n          <div key={index}>\n            {week.map(date => (\n              <CalendarDate\n                key={date.date()}\n                dateToRender={date}\n                dateOfMonth={this.state.calendar.currentDate}\n                onClick={date =>\n                  alert(`Will go to daily-view of ${date.format('YYYY-MM-DD')}`)\n                }\n              />\n            ))}\n          </div>\n        ))}\n      </div>\n    )\n  }\n}\n\nclass Year extends React.Component {\n  render() {\n    let { date, ...props } = this.props\n    let range = Year.range(date)\n    const months = []\n    const firstMonth = dates.startOf(date, 'year')\n\n    for (let i = 0; i < 12; i++) {\n      months.push(\n        <Calendar key={i + 1} date={dates.add(firstMonth, i, 'month')} />\n      )\n    }\n\n    return <div className=\"year\">{months.map(month => month)}</div>\n  }\n}\n\n// Day.propTypes = {\n//   date: PropTypes.instanceOf(Date).isRequired,\n// }\n\nYear.range = date => {\n  return [dates.startOf(date, 'year')]\n}\n\nYear.navigate = (date, action) => {\n  switch (action) {\n    case navigate.PREVIOUS:\n      return dates.add(date, -1, 'year')\n\n    case navigate.NEXT:\n      return dates.add(date, 1, 'year')\n\n    default:\n      return date\n  }\n}\n\nYear.title = (date, { localizer }) => localizer.format(date, 'yearHeaderFormat')\n\nexport default Year\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport BigCalendar from 'react-big-calendar'\nimport moment from 'moment'\nimport Year from './Year'\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\nimport './styles.css'\n\n// Setup the localizer by providing the moment (or globalize) Object\n// to the correct localizer.\nconst localizer = BigCalendar.momentLocalizer(moment) // or globalizeLocalizer\nlocalizer.formats.yearHeaderFormat = 'YYYY'\n// localizer.messages.year = 'Year'\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <BigCalendar\n          localizer={localizer}\n          events={[]}\n          toolbar={true}\n          views={{\n            day: true,\n            week: true,\n            month: true,\n            year: Year\n          }}\n          messages={{ year: 'Year' }}\n        />\n      </div>\n    )\n  }\n}\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<App />, rootElement)\n"],"sourceRoot":""}